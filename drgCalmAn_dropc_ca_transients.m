%% drgCaImAn_dropc_ca_transients.m
%
% This code tests the correlation between caiman mezmerize output from
% the jupyter lab code mcorr_cnmf_dr.ipynb pipeline and data extracted 
% with these caiman ROIs using the NoRMCorr->deepCADRT pipeline
%
close all
clear all

dt=0.00815;


%% Get the raw and inferred traces generated by drgCaimAn_script
% [fnameca,pnameca,nCancel] = uigetfile({'*.mat;*.hdf5;*.csv'},'Select the output file from CaimAn, EXTRACT or ImageJ...');
% if nCancel
%     inputPath = [pnameca,fnameca];
%     pnameStart = pnameca;
%     %save('timeCorr_cfg.mat','pnameStart','-append');
% else
%     error('Cancelled')
% end


trace_filename='/data/Kira/RO1_Spring2024/mesmerize-batch/cnmf_out_dFF_no_residuals_4.hdf5';
deepcadrt_filename='/data/Kira/RO1_Spring2024/120hz_cy_01122024_transients_XY0_Z0_T00000_C0_E_10_Iter_3500_output_ncorr.mat';
raw_filename='/data/Kira/RO1_Spring2024/120hz_cy_01122024_transients_XY0_Z0_T00000_C0_ncorr.mat';
% 
% if strcmp(trace_filename(end-3:end),'.mat')
%     %This reads the extract file
%     load(trace_filename)
%     traces=zeros(size(output.temporal_weights,1),size(output.temporal_weights,2));
%     for traceNo=1:size(output.temporal_weights,2)
%         traces(:,traceNo)=output.temporal_weights(:,traceNo);
%     end
%     traces=traces';
% else
%     if strcmp(trace_filename(end-4:end),'.hdf5')
%This is an hdf5 generated by CaImAn
traces=h5read(trace_filename,'/dFF' )';
sz_traces=size(traces);
no_traces=sz_traces(1);
no_images=sz_traces(2);



% traces=h5read(trace_filename,'/C' )';
%     else
%         %This is a csv file created from ImageJ
%         traces=readmatrix([handles_choice.PathNamecsv{fileNo} handles_choice.csvFileName{fileNo}]);
%     end
% end



fprintf(1, ['\ndrgCaImAn_dropc run for ' trace_filename '\n\n']);
figNo=0;

figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
set(hFig1, 'units','normalized','position',[.05 .1 .85 .8])

hold on
 
% Determine the y spacing of the traces
y_shift=2*(prctile(traces(:),95)-prctile(traces(:),5));

%Plot the traces
time=[1:no_images]*dt;
for trNo=1:no_traces
% for trNo=1:20
    plot(time,traces(trNo,:)+y_shift*trNo,'-k','LineWidth',1)
end

ylim([-y_shift*0.2 (no_traces+2)*y_shift])
xlabel('time (s)')
ylabel('Caiman deltaF/F')


%Now read the DeepCADRT file and get traces from the caiman contours
load(deepcadrt_filename)
mean_image=zeros(size(M2,1),size(M2,2));
mean_image(:,:)=mean(M2,3);
mean_image=mean_image/(max(max(mean_image)));
figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
imshow(mean_image)

figure(figNo)
hold on

%Read and plot contours
contour_filename=[trace_filename(1:end-23) 'contours' trace_filename(end-6:end)];
contours=[];
min1=20000000;
max1=-200000;
min2=20000000;
max2=-20000000;
for ii=1: no_traces
    this_contour=[];
    this_contour=h5read(contour_filename,['/contours' num2str(ii-1)])';
    contours(ii).contour=this_contour;

    min1=min([min1 min(this_contour(:,1))]);
    max1=max([max1 max(this_contour(:,1))]);
    min2=min([min2 min(this_contour(:,2))]);
    max2=max([max2 max(this_contour(:,2))]);
    figure(figNo)
    for jj=2:size(this_contour,1)
        plot([this_contour(jj-1,2) this_contour(jj,2)],[this_contour(jj-1,1) this_contour(jj,1)],'-r')
    end
end

title('DeepCADRT mean image')

%Now calculate the DeepCADRT traces
tracesDCRT=zeros(size(traces,1),size(traces,2));
for ii=1:no_traces

    this_contour=[];
    this_contour=contours(ii).contour;
    contour_1=zeros(1,size(this_contour,1));
    contour_1(1,:)=this_contour(:,1);
    contour_2=zeros(1,size(this_contour,1));
    contour_2(1,:)=this_contour(:,2);

    dim1_vector=[];
    dim2_vector=[];
    for dim2=1:size(M2,2)
        dim1_vector=[dim1_vector 1:size(M2,1)];
        dim2_vector=[dim2_vector dim2*ones(1,size(M2,1))];
    end

    mask=inpolygon(dim1_vector,dim2_vector,contour_1,contour_2);

    %Loop through each frame in M2
    for iit=1:size(M2,3)
        frame=M2(:,:,iit);
        intesity_in_contour=frame(mask);
        tracesDCRT(ii,iit)=mean(intesity_in_contour);
    end

end


figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
set(hFig1, 'units','normalized','position',[.05 .1 .85 .8])

hold on
 
% Determine the y spacing of the traces
y_shift=2*(prctile(tracesDCRT(:),95)-prctile(tracesDCRT(:),5));

%Plot the traces
time=[1:no_images]*dt;
for trNo=1:no_traces
% for trNo=1:20
    plot(time,tracesDCRT(trNo,:)+y_shift*trNo,'-k','LineWidth',1)
end

ylim([-y_shift*0.2 (no_traces+2)*y_shift])
xlabel('time (s)')
ylabel('DeepCADRT deltaF/F')

%Now read the raw file and get traces from the caiman contours
load(raw_filename)
raw_mean_image=zeros(size(M2,1),size(M2,2));
raw_mean_image(:,:)=mean(M2,3);
raw_mean_image=raw_mean_image/(max(max(raw_mean_image)));
figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
imshow(raw_mean_image)

figure(figNo)
hold on

%Read and plot contours
contour_filename=[trace_filename(1:end-23) 'contours' trace_filename(end-6:end)];
contours=[];
min1=20000000;
max1=-200000;
min2=20000000;
max2=-20000000;
for ii=1: no_traces
    this_contour=[];
    this_contour=h5read(contour_filename,['/contours' num2str(ii-1)])';
    contours(ii).contour=this_contour;

    min1=min([min1 min(this_contour(:,1))]);
    max1=max([max1 max(this_contour(:,1))]);
    min2=min([min2 min(this_contour(:,2))]);
    max2=max([max2 max(this_contour(:,2))]);
    figure(figNo)
    for jj=2:size(this_contour,1)
        plot([this_contour(jj-1,2) this_contour(jj,2)],[this_contour(jj-1,1) this_contour(jj,1)],'-r')
    end
end
title('Raw mean image')

%Now calculate the raw traces
traces_raw=zeros(size(traces,1),size(traces,2));
for ii=1:no_traces

    this_contour=[];
    this_contour=contours(ii).contour;
    contour_1=zeros(1,size(this_contour,1));
    contour_1(1,:)=this_contour(:,1);
    contour_2=zeros(1,size(this_contour,1));
    contour_2(1,:)=this_contour(:,2);

    dim1_vector=[];
    dim2_vector=[];
    for dim2=1:size(M2,2)
        dim1_vector=[dim1_vector 1:size(M2,1)];
        dim2_vector=[dim2_vector dim2*ones(1,size(M2,1))];
    end

    mask=inpolygon(dim1_vector,dim2_vector,contour_1,contour_2);

    %Loop through each frame in M2
    for iit=1:size(M2,3)
        frame=M2(:,:,iit);
        intesity_in_contour=frame(mask);
        traces_raw(ii,iit)=mean(intesity_in_contour);
    end

end

%Show the raw traces
figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
set(hFig1, 'units','normalized','position',[.05 .1 .85 .8])

hold on
 
% Determine the y spacing of the traces
y_shift=2*(prctile(traces_raw(:),95)-prctile(traces_raw(:),5));

%Plot the traces
time=[1:no_images]*dt;
for trNo=1:no_traces
% for trNo=1:20
    plot(time,traces_raw(trNo,:)+y_shift*trNo,'-k','LineWidth',1)
end

ylim([-y_shift*0.2 (no_traces+2)*y_shift])
xlabel('time (s)')
ylabel('RawdeltaF/F')

% title(fnameca(1:end-4))

% xlim([30  40])
% ylim([18000 24000])

%Now extract the transients for one trace
t_before=-0.05;
ii_before=ceil(t_before/dt);
t_after=0.1;
ii_after=ceil(t_after/dt);
d_time=([ii_before:ii_after]*dt)+(dt/2);
this_trace_no=8;

rhos=zeros(1,no_traces);
% this_trace=this_trace-prctile(this_trace,0.5);
tic
for this_trace_no=1:no_traces

    this_trace=zeros(1,no_images);
    this_trace(1,:)=traces(this_trace_no,:);
    this_raw_trace(1,:)=traces_raw(this_trace_no,:);
    at_end=0;
    ii=0;
    peak_start_iis=[];
    peak_end_iis=[];
    iip=0;
    ii_th=0.01;
    while at_end==0
        ii_next=find(this_trace(ii+1:end)>0+ii_th,1,'first');
        if ~isempty(ii_next)
            iip=iip+1;
            peak_start_iis(iip)=ii+ii_next;
            %Find the end of the peak
            ii_next_end=find(this_trace(ii+ii_next:end)<ii_th,1,'first');
            if ~isempty(ii_next_end)
                peak_end_iis(iip)=ii+ii_next+ii_next_end;
                ii=ii+ii_next+ii_next_end;
            else
                at_end=1;
                peak_end_iis(iip)=no_images;
            end
        else
            at_end=1;
        end
    end
    % 
    % figNo=figNo+1;
    % try
    %     close(figNo)
    % catch
    % end
    % 
    % hFig1 = figure(figNo);
    % set(hFig1, 'units','normalized','position',[.05 .1 .85 .15])
    % 
    % pct99=prctile(this_trace(this_trace>0),99);
    % this_raw_trace_norm=(this_raw_trace-mean(this_raw_trace))*pct99/prctile(this_raw_trace-mean(this_raw_trace),95);
    % 
    % plot(time,this_raw_trace_norm,'-','Color',[0.7 0.7 1])
    % hold on
    % plot(time,this_trace,'-k','LineWidth',1)
    % 
    % xlabel('time (s)')
    % ylabel('dFF')
    % title(['Caiman deltaF/F for trace No ' num2str(this_trace_no)])

    % figNo=figNo+1;
    % try
    %     close(figNo)
    % catch
    % end
    % 
    % hFig1 = figure(figNo);
    % set(hFig1, 'units','normalized','position',[.05 .55 .4 .4])
    % 
    % hold on

    all_transients=[];
    for ii=1:iip
        if (peak_start_iis(ii)+ii_before>0)&peak_start_iis(ii)+ii_after<no_images
            all_transients=[all_transients this_trace(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after)];
            % plot(d_time,this_trace(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after),'Color',[0.7 0.7 0.7])
        end
    end

    % this_yl=ylim;
    % plot([0 0],ylim,'-k','LineWidth',2)
    % 
    % 
    % xlabel('time (s)')
    % ylabel('dFF')
    % title(['Caiman deltaF/F transients for trace No ' num2str(this_trace_no)])



    this_traceDCRT(1,:)=tracesDCRT(this_trace_no,:);
    % figNo=figNo+1;
    % try
    %     close(figNo)
    % catch
    % end
    % 
    % hFig1 = figure(figNo);
    % set(hFig1, 'units','normalized','position',[.05 .3 .85 .15])
    % 
    % plot(time,this_raw_trace*mean(this_traceDCRT)/mean(this_raw_trace),'-','Color',[0.7 0.7 1])
    % hold on
    % plot(time,this_traceDCRT,'-k','LineWidth',1)
    % 
    % xlabel('time (s)')
    % ylabel('A.U.')
    % title(['DeepCADRT fluorescence for trace No ' num2str(this_trace_no)])
    % 
    % figNo=figNo+1;
    % try
    %     close(figNo)
    % catch
    % end
    % 
    % hFig1 = figure(figNo);
    % set(hFig1, 'units','normalized','position',[.55 .55 .4 .4])
    % 
    % hold on

    all_transientsDCRT=[];
    for ii=1:iip
        if (peak_start_iis(ii)+ii_before>0)&peak_start_iis(ii)+ii_after<no_images
            all_transientsDCRT=[all_transientsDCRT this_traceDCRT(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after)];
            % plot(d_time,this_traceDCRT(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after),'Color',[0.7 0.7 0.7])
        end
    end
    % 
    % this_yl=ylim;
    % plot([0 0],ylim,'-k','LineWidth',2)
    % 
    % 
    % xlabel('time (s)')
    % ylabel('A.U.')
    % title(['DeepCADRT fluorescence transients for trace No ' num2str(this_trace_no)])

    rhos(this_trace_no)=corr(all_transients',all_transientsDCRT');
    this_toc=toc;
    % while toc-this_toc<5
    % end
    % figNo=figNo-4;
end

figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
set(hFig1, 'units','normalized','position',[.55 .55 .4 .4])

hold on
histogram(rhos)
title('rho between DeepCADRT and caiman')
xlabel('rho')
ylabel('No of traces')

%Now keep only the traces above rho=0.7
%Now read the DeepCADRT file and get traces from the caiman contours
rho_thr=0.7;
fprintf(1,['Number of caiman contours= ' num2str(length(rhos)) ', number with rho>=' num2str(rho_thr) ' is ' num2str(sum(rhos>=rho_thr)) '\n'])
load(deepcadrt_filename)
max_image=zeros(size(M2,1),size(M2,2));
max_image(:,:)=max(M2,[],3);
max_image(:,:)=max_image(:,:)/max(max_image(:));
for ii1=1:size(M2,1)
    for ii2=1:size(M2,2)
        if max_image(ii1,ii2)>1
            max_image(ii1,ii2)=1;
        end
    end
end
figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
imshow(max_image)

figure(figNo)
hold on

%Read and plot contours
contour_filename=[trace_filename(1:end-23) 'contours' trace_filename(end-6:end)];
contours=[];
min1=20000000;
max1=-200000;
min2=20000000;
max2=-20000000;
for ii=1: no_traces
    if rhos(ii)>=0.7
        this_contour=[];
        this_contour=h5read(contour_filename,['/contours' num2str(ii-1)])';
        contours(ii).contour=this_contour;

        min1=min([min1 min(this_contour(:,1))]);
        max1=max([max1 max(this_contour(:,1))]);
        min2=min([min2 min(this_contour(:,2))]);
        max2=max([max2 max(this_contour(:,2))]);
        figure(figNo)
        for jj=2:size(this_contour,1)
            plot([this_contour(jj-1,2) this_contour(jj,2)],[this_contour(jj-1,1) this_contour(jj,1)],'-r')
        end
    end
end

title(['Contours with rho >= ' num2str(rho_thr) ' for DeepCADRT vs. caiman'])

figNo=figNo+1;
try
    close(figNo)
catch
end

hFig1 = figure(figNo);
set(hFig1, 'units','normalized','position',[.05 .1 .85 .8])

hold on
 
% Determine the y spacing of the traces
y_shift=max(traces(:));

%Plot the traces
time=[1:no_images]*dt;
trNo_inc=0;
for trNo=1:no_traces
    % for trNo=1:20
    if rhos(trNo)>=rho_thr
        trNo_inc=trNo_inc+1;
        this_traceDCRT=zeros(1,size(tracesDCRT,2));
        this_traceDCRT(1,:)=tracesDCRT(trNo,:);
        this_trace=zeros(1,size(tracesDCRT,2));
        this_trace=traces(trNo,:);
        this_traceDCRT=3*(max(this_trace)/max(this_traceDCRT))*(this_traceDCRT-prctile(this_traceDCRT,5));
        plot(time,this_traceDCRT+y_shift*trNo_inc,'-k','Color',[0.5 0.5 1],'LineWidth',2)
        trNo_inc=trNo_inc+1;
        plot(time,this_trace+y_shift*trNo_inc,'-k','LineWidth',1)
    end
end

ylim([-y_shift*0.2 (trNo_inc+2)*y_shift])
xlabel('time (s)')
ylabel(['Caiman deltaF/F rho >' num2str(rho_thr)])

%Now plot the transients for rho>rho_thr
for this_trace_no=1:no_traces
    if rhos(this_trace_no)>=rho_thr
        this_trace=zeros(1,no_images);
        this_trace(1,:)=traces(this_trace_no,:);
        this_raw_trace(1,:)=traces_raw(this_trace_no,:);
        this_traceDCRT(1,:)=tracesDCRT(this_trace_no,:);
        at_end=0;
        ii=0;
        peak_start_iis=[];
        peak_end_iis=[];
        iip=0;
        ii_th=0.01;
        while at_end==0
            ii_next=find(this_trace(ii+1:end)>0+ii_th,1,'first');
            if ~isempty(ii_next)
                iip=iip+1;
                peak_start_iis(iip)=ii+ii_next;
                %Find the end of the peak
                ii_next_end=find(this_trace(ii+ii_next:end)<ii_th,1,'first');
                if ~isempty(ii_next_end)
                    peak_end_iis(iip)=ii+ii_next+ii_next_end;
                    ii=ii+ii_next+ii_next_end;
                else
                    at_end=1;
                    peak_end_iis(iip)=no_images;
                end
            else
                at_end=1;
            end
        end

        figNo=figNo+1;
        try
            close(figNo)
        catch
        end

        hFig1 = figure(figNo);
        set(hFig1, 'units','normalized','position',[.05 .1 .85 .15])

        pct99=prctile(this_trace(this_trace>0),99);
        this_raw_trace_norm=(this_raw_trace-mean(this_raw_trace))*pct99/prctile(this_raw_trace-mean(this_raw_trace),95);
        this_traceDCRT_norm=(this_traceDCRT-mean(this_traceDCRT))*pct99/prctile(this_traceDCRT-mean(this_traceDCRT),95);

        %plot(time,this_raw_trace_norm,'-','Color',[0.7 0.7 1])
        plot(time,this_traceDCRT_norm,'Color',[0.7 0.7 1],'LineWidth',2)
        hold on
        plot(time,this_trace,'-k','LineWidth',1)

        xlabel('time (s)')
        ylabel('dFF')
        title(['Caiman deltaF/F for trace No ' num2str(this_trace_no)])

        figNo=figNo+1;
        try
            close(figNo)
        catch
        end

        hFig1 = figure(figNo);
        set(hFig1, 'units','normalized','position',[.05 .55 .4 .4])

        hold on

        all_transients=[];
        for ii=1:iip
            if (peak_start_iis(ii)+ii_before>0)&peak_start_iis(ii)+ii_after<no_images
                all_transients=[all_transients this_trace(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after)];
                plot(d_time,this_trace(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after),'Color',[0.7 0.7 0.7])
            end
        end

        this_yl=ylim;
        plot([0 0],ylim,'-k','LineWidth',2)


        xlabel('time (s)')
        ylabel('dFF')
        title(['Caiman deltaF/F transients for trace No ' num2str(this_trace_no)])



        
        figNo=figNo+1;
        try
            close(figNo)
        catch
        end

        hFig1 = figure(figNo);
        set(hFig1, 'units','normalized','position',[.05 .3 .85 .15])

        plot(time,this_raw_trace*mean(this_traceDCRT)/mean(this_raw_trace),'-','Color',[0.7 0.7 1])
        hold on
        plot(time,this_traceDCRT,'-k','LineWidth',1)

        xlabel('time (s)')
        ylabel('A.U.')
        title(['DeepCADRT fluorescence for trace No ' num2str(this_trace_no)])

        figNo=figNo+1;
        try
            close(figNo)
        catch
        end

        hFig1 = figure(figNo);
        set(hFig1, 'units','normalized','position',[.55 .55 .4 .4])

        hold on

        all_transientsDCRT=[];
        for ii=1:iip
            if (peak_start_iis(ii)+ii_before>0)&peak_start_iis(ii)+ii_after<no_images
                all_transientsDCRT=[all_transientsDCRT this_traceDCRT(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after)];
                plot(d_time,this_traceDCRT(peak_start_iis(ii)+ii_before:peak_start_iis(ii)+ii_after),'Color',[0.7 0.7 0.7])
            end
        end

        this_yl=ylim;
        plot([0 0],ylim,'-k','LineWidth',2)


        xlabel('time (s)')
        ylabel('A.U.')
        title(['DeepCADRT fluorescence transients for trace No ' num2str(this_trace_no)])

        this_toc=toc;
        % while toc-this_toc<5
        % end
        figNo=figNo-4;
    end
end
pffft=1;
